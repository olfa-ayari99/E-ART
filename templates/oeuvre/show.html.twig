{% extends "base/base.html.twig" %} {% block body %}
<style>
  #submit {
    cursor: pointer;
    transition: all 0.3s ease;
  }
  #submit:hover {
    transform: scale(1.2);
    color: green;
  }
</style>
<section
  class="content-section"
  data-background="#fffbf7"
  style="background: rgb(255, 251, 247)"
>
  <div class="container">
    <div class="row align-items-center">
      <div class="col-lg-6">
        <div class="side-content left">
          <small>50% off exhibitions</small>
          <h2>{{ oeuvre.title }}</h2>
          <p>
            {{ oeuvre.description }}
          </p>
          <table>
            <tbody>
              <tr>
                <td>Prix</td>
                <td>: {{ oeuvre.price }}</td>
              </tr>
              <tr>
                <td>Evaluation</td>
                <td>
                  :
                  <form
                    action="{{ path('app_oeuvre_note', { id: oeuvre.id }) }}"
                    method="post"
                    id="noteForm"
                  >
                    <div class="stars" style="font-size: larger">
                      <i class="lar la-star" data-value="1"></i
                      ><i class="lar la-star" data-value="2"></i
                      ><i class="lar la-star" data-value="3"></i
                      ><i class="lar la-star" data-value="4"></i
                      ><i class="lar la-star" data-value="5"></i>
                    </div>
                    <input
                      type="hidden"
                      name="note"
                      id="note"
                      value="{% if oeuvre.evaluation %} {{ oeuvre.evaluation.valeur }} {% else %} 0 {% endif %}"
                      
                    />
                    <i
                      class="fa-solid fa-thumbs-up"
                      id="submit"
                      onclick="document.querySelector('#noteForm').submit()"
                    ></i>
                  </form>
                </td>
              </tr>
              <tr>
                <td>Catégorie de l'oeuvre</td>
                <td>: Portrait</td>
              </tr>
            </tbody>
          </table>
        </div>
        <!-- end side-content -->

        <div class="side-icon-list">
          <ul>
            <li>
              <figure><img src="images/icon01.png" alt="Image" /></figure>
              <div class="content">
                <h5>Ajouter au panier</h5>
                <p></p>
              </div>
              <!-- end content -->
            </li>
          </ul>
        </div>
        <!-- end side-icon-list -->
      </div>
      <!-- end col-6 -->
      <div class="col-lg-6">
        <div
          class="side-image right-half is-inview"
          data-scroll=""
          data-scroll-speed="1"
          style="
            transform: matrix3d(
              1,
              0,
              0,
              0,
              0,
              1,
              0,
              0,
              0,
              0,
              1,
              0,
              0,
              -22.6275,
              0,
              1
            );
          "
        >
          <img src="/uploads/oeuvres/{{ oeuvre.image }}" alt="Image" />
        </div>
        <!-- end side-image -->
      </div>
      <!--end col-6 -->
    </div>
    <!-- end row -->
  </div>
  <!-- end container -->
</section>

<a href="{{ path('app_oeuvre_edit', { id: oeuvre.id }) }}">edit</a>
<script>
  window.onload = () => {
    // On va chercher toutes les étoiles
    const stars = document.querySelectorAll(".la-star");

    // On va chercher l'input
    const note = document.querySelector("#note");
    resetStars({% if oeuvre.evaluation %} {{ oeuvre.evaluation.valeur }} {% else %} 0 {% endif %});

    for (star of stars) {
      // On écoute le survol
      star.addEventListener("mouseover", function () {
        resetStars();
        this.style.color = "red";
        this.classList.add("las");
        this.classList.remove("lar");

        let previousStar = this.previousElementSibling;

        while (previousStar) {
          // On passe l'étoile qui précède en rouge
          previousStar.style.color = "red";
          previousStar.classList.add("las");
          previousStar.classList.remove("lar");
          // On récupère l'étoile qui la précède
          previousStar = previousStar.previousElementSibling;
        }
      });

      // On écoute le clic
      star.addEventListener("click", function () {
        note.value = this.dataset.value;
      });

      star.addEventListener("mouseout", function () {
        resetStars(note.value);
      });
    }

    /**
     * Reset des étoiles en vérifiant la note dans l'input caché
     * @param {number} note
     */
    function resetStars(note = 0) {
      for (star of stars) {
        if (star.dataset.value > note) {
          star.style.color = "black";
          star.classList.add("lar");
          star.classList.remove("las");
        } else {
          star.style.color = "red";
          star.classList.add("las");
          star.classList.remove("lar");
        }
      }
    }
  };
</script>
{% endblock %}
